(()=>{"use strict";var __webpack_modules__={794:()=>{eval("\n;// CONCATENATED MODULE: ./src/components/constants.js\nvar popupImage = document.querySelector('#image');\nvar popupImg = document.querySelector('.popup__image');\nvar popupText = document.querySelector('.popup__text');\nvar galleryCard = document.querySelector('#gallery-card').content;\nvar allForms = document.forms;\nvar galleryContainer = document.querySelector('.gallery__grid-container');\nvar profileBtEdit = document.querySelector('.profile__button-edit');\nvar cardBtnAdd = document.querySelector('.profile__button-add');\nvar popupAll = document.querySelectorAll('.popup');\nvar formUser = document.forms.formUser;\nvar formCard = document.forms.formCard;\nvar popupUser = document.querySelector('#user');\nvar popupCard = document.querySelector('#card');\nvar profileName = document.querySelector('.profile__name');\nvar profileAbout = document.querySelector('.profile__about');\nvar profileAvatar = document.querySelector('.profile__avatar');\nvar profileSubmitBtn = formUser.querySelector('.popup__save-button');\nvar cardSubmitBtn = formCard.querySelector('.popup__save-button');\nvar nameInput = popupProfileForm.querySelector('#popupUserName');\nvar jobInput = popupProfileForm.querySelector('#popupUserAbout');\nvar inputPopupName = formCard.querySelector('#placeName');\nvar inputUrl = formCard.querySelector('#placeUrl');\nvar avatarPopup = document.querySelector('.popup_avatar');\nvar avatarForm = avatarPopup.querySelector('.popup__form-avatar');\nvar avatarPhotoInput = avatarForm.querySelector('.popup__input');\nvar avatarSubmitBtn = avatarForm.querySelector('.popup__save-button');\nvar enableValidationSettings = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__save-button',\n  inactiveButtonClass: 'popup__save-button_type_inactive',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__input-error_type_active'\n};\n;// CONCATENATED MODULE: ./src/components/card-container.js\nvar initialCards = [{\n  name: 'Архыз',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg'\n}, {\n  name: 'Челябинская область',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg'\n}, {\n  name: 'Иваново',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg'\n}, {\n  name: 'Камчатка',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg'\n}, {\n  name: 'Холмогорский район',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg'\n}, {\n  name: 'Байкал',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg'\n}];\n;// CONCATENATED MODULE: ./src/components/utils.js\n//! Функция открывающая попап\nfunction openPopup(popup) {\n  popup.classList.add('popup_opened');\n  document.addEventListener('keydown', closeEsc);\n}\n\n//! Функция закрывающая попап\nfunction closePopup(popup) {\n  popup.classList.remove('popup_opened');\n  document.removeEventListener('keydown', closeEsc);\n}\nvar closeEsc = function closeEsc(evt) {\n  if (evt.key === \"Escape\") {\n    closePopup(document.querySelector('.popup_opened'));\n  }\n};\n;// CONCATENATED MODULE: ./src/components/api.js\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/plus-cohort-19',\n  headers: {\n    authorization: 'fdab90c4-b080-4dc1-8288-a71400d984d8',\n    'Content-Type': 'application/json'\n  }\n};\n\n// Response check\n\nvar checkResponse = function checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n};\n\n// Get user data\n\nvar getSrvUser = function getSrvUser() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Downloading cards from the server\n\nvar getSrvCards = function getSrvCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Edit avatar\n\nvar changeAvatar = function changeAvatar(photo) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: photo\n    })\n  }).then(checkResponse);\n};\n\n// Edit name and about info\n\nvar editProfile = function editProfile(name, about) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  }).then(checkResponse);\n};\n\n// Add card\n\nvar createNewCard = function createNewCard(link, name) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(checkResponse);\n};\n\n// Delete card\n\nvar deleteCard = function deleteCard(card) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(card), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Add like\n\nvar addLike = function addLike(card) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(card), {\n    method: 'PUT',\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Delete like\n\nvar deleteLike = function deleteLike(card) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(card), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(checkResponse);\n};\n;// CONCATENATED MODULE: ./src/components/card.js\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\nvar createCard = function createCard(data, user) {\n  var cardElement = galleryCard.querySelector('.gallery__card').cloneNode(true);\n  var cardImage = cardElement.querySelector('.gallery__image');\n  var cardTitle = cardElement.querySelector('.gallery__title');\n  var cardTrashBtn = cardElement.querySelector('.gallery__delet');\n  var cardLikeBtn = cardElement.querySelector('.gallery__button-heart');\n  var cardLikeNum = cardElement.querySelector('.gallery__like-num');\n  cardImage.src = data.link;\n  cardImage.alt = data.name;\n  cardTitle.textContent = data.name;\n  cardLikeNum.textContent = data.likes.length;\n\n  // Delete user card's\n\n  if (user._id === data.owner._id) {\n    cardTrashBtn.classList.add('gallery___delete_type_active');\n    cardTrashBtn.addEventListener('click', function () {\n      deleteCard(data._id).then(function () {\n        deleteCard(cardTrashBtn);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    });\n  }\n\n  // Active like's on card\n  var _iterator = _createForOfIteratorHelper(data.likes),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      if (item._id.includes(user._id)) {\n        cardLikeBtn.classList.add('gallery__button-heart_active');\n      }\n    }\n\n    // New like's on card\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  cardLikeBtn.addEventListener('click', function (evt) {\n    if (!evt.target.classList.contains('gallery__button-heart_active')) {\n      addLike(data._id).then(function (data) {\n        evt.target.classList.add('gallery__button-heart_active');\n        cardLikeNum.textContent = data.likes.length;\n      }).catch(function (err) {\n        console.error(err);\n      });\n    } else {\n      deleteLike(data._id).then(function (data) {\n        evt.target.classList.remove('gallery__button-heart_active');\n        cardLikeNum.textContent = data.likes.length;\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  });\n  cardImage.addEventListener('click', function () {\n    openPopup(popupImage);\n    popupImg.src = data.link;\n    popupImg.alt = data.name;\n    popupText.textContent = data.name;\n  });\n  return cardElement;\n};\n\n//! Добавляем карту в контейнер\nfunction addCard(card, container) {\n  container.prepend(card);\n}\n;// CONCATENATED MODULE: ./src/components/validate.js\n// Show error text \n\nvar showInputError = function showInputError(formElement, inputElement, errorMessage, settings) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.add(settings.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(settings.errorClass);\n};\n\n// Hide error text\n\nvar hideInputError = function hideInputError(formElement, inputElement, settings) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.remove(settings.inputErrorClass);\n  errorElement.classList.remove(settings.errorClass);\n  errorElement.textContent = '';\n};\n\n// Validity check\n\nvar checkInputValidity = function checkInputValidity(formElement, inputElement, settings) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, settings);\n  } else {\n    hideInputError(formElement, inputElement, settings);\n  }\n};\nvar setEventListeners = function setEventListeners(formElement, settings) {\n  var inputList = Array.from(formElement.querySelectorAll(settings.inputSelector));\n  var buttonElement = formElement.querySelector(settings.submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, settings);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      checkInputValidity(formElement, inputElement, settings);\n      toggleButtonState(inputList, buttonElement, settings);\n    });\n  });\n};\n\n// Enable validation\n\nvar enableValidation = function enableValidation(settings) {\n  var formList = Array.from(document.querySelectorAll(settings.formSelector));\n  formList.forEach(function (formElement) {\n    formElement.addEventListener('submit', function (evt) {\n      evt.preventDefault();\n    });\n    setEventListeners(formElement, settings);\n  });\n};\n\n// Check invalid input\n\nvar hasInvalidInput = function hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n};\n\n// Control submit button\n\nvar toggleButtonState = function toggleButtonState(inputList, buttonElement, settings) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(settings.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(settings.inactiveButtonClass);\n  }\n};\n\n// Button submit disable\n\nvar btnDisable = function btnDisable(buttonElement, settings) {\n  buttonElement.disabled = true;\n  buttonElement.classList.add(settings.inactiveButtonClass);\n};\n;// CONCATENATED MODULE: ./src/components/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || components_unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction components_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return components_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return components_arrayLikeToArray(o, minLen); }\nfunction components_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\nvar user = {};\n\n// Load data and cards from server\n\nPromise.all([getSrvUser(), getSrvCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    srvUser = _ref2[0],\n    cards = _ref2[1];\n  user = srvUser;\n  profileName.textContent = user.name;\n  profileAbout.textContent = user.about;\n  profileAvatar.src = user.avatar;\n  cards.reverse().forEach(function (data) {\n    galleryContainer.prepend(createCard(data, user));\n  });\n}).catch(function (err) {\n  console.error(err);\n});\nfunction changeProfile(evt) {\n  evt.preventDefault();\n  profileSubmitBtn.textContent = 'Сохранение...';\n  editProfile(nameInput.value, jobInput.value).then(function () {\n    profileName.textContent = nameInput.value;\n    profileAbout.textContent = jobInput.value;\n    closePopup(popupUser);\n  }).catch(function (err) {\n    console.error(err);\n  }).finally(function () {\n    profileSubmitBtn.textContent = 'Сохранить';\n  });\n}\n\n// Edit avatar\n\nfunction changeAvatarProfile(evt) {\n  evt.preventDefault();\n  avatarSubmitBtn.textContent = 'Сохранение...';\n  var avatar = avatarPhotoInput.value;\n  changeAvatar(avatar).then(function (item) {\n    profileAvatar.src = item.avatar;\n    avatarForm.reset();\n    evt.target.reset();\n    closePopup(avatarPopup);\n  }).catch(function (err) {\n    console.error(err);\n  }).finally(function () {\n    avatarSubmitBtn.textContent = 'Сохранить';\n  });\n}\n\n// Add new card\n\nfunction addNewCard(evt) {\n  evt.preventDefault();\n  cardSubmitBtn.textContent = 'Создание...';\n  createNewCard(inputUrl.value, inputPopupName.value).then(function (data) {\n    galleryContainer.prepend(createCard(data, user));\n    evt.target.reset();\n    closePopup(popupCard);\n  }).catch(function (err) {\n    console.error(err);\n  }).finally(function () {\n    cardSubmitBtn.textContent = 'Создать';\n  });\n}\n\n//! Кнопка редактирования профиля\nprofileBtEdit.addEventListener('click', function () {\n  openPopup(popupUser);\n  formUser.profileTitle.value = profileName.textContent;\n  formUser.profileSubtitle.value = profileAbout.textContent;\n});\n\n//! Кнопка добавления карточки\ncardBtnAdd.addEventListener('click', function () {\n  var SubmButton = popupCard.querySelector(enableValidationSettings.submitButtonSelector);\n  openPopup(popupCard);\n  btnDisable(SubmButton, enableValidationSettings);\n});\n\n// Listener for open Avatar popup\n\nprofileAvatar.addEventListener('click', function () {\n  openPopup(avatarPopup);\n});\n\n//! Закрываем попап\npopupAll.forEach(function (popup) {\n  popup.addEventListener('click', function (e) {\n    if (e.target.classList.contains('popup__close-icon') || e.target.classList.contains('popup')) {\n      closePopup(e.target.closest('.popup'));\n    }\n  });\n});\n\n// Listener for profile submit button (  )  \n\nformUser.addEventListener('submit', changeProfile);\n\n// Listener for card submit button ( card.js )\n\nformCard.addEventListener('submit', addNewCard);\n\n// Render cards from array ( database.js )\n\navatarForm.addEventListener('submit', changeAvatarProfile);\nenableValidation(enableValidationSettings);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUF2SCwyQkFBMkIsQ0FBQyxRQUFRLEVBQUVxSCxtQkFBbUIsQ0FBQztBQUUxRGQsZ0JBQWdCLENBQUNsQix3QkFBUSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL2NvbnN0YW50cy5qcz8zMDY1Iiwid2VicGFjazovL21lc3RvLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9jYXJkLWNvbnRhaW5lci5qcz9iNGFhIiwid2VicGFjazovL21lc3RvLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy91dGlscy5qcz83NWJhIiwid2VicGFjazovL21lc3RvLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9hcGkuanM/ODY4MCIsIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvY2FyZC5qcz8yNGMzIiwid2VicGFjazovL21lc3RvLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy92YWxpZGF0ZS5qcz9lZGQ5Iiwid2VicGFjazovL21lc3RvLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9pbmRleC5qcz8yYWY5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwb3B1cEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ltYWdlJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEltZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwVGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fdGV4dCcpO1xyXG5leHBvcnQgY29uc3QgZ2FsbGVyeUNhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZ2FsbGVyeS1jYXJkJykuY29udGVudDtcclxuZXhwb3J0IGNvbnN0IGFsbEZvcm1zID0gZG9jdW1lbnQuZm9ybXM7XHJcbmV4cG9ydCBjb25zdCBnYWxsZXJ5Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmdhbGxlcnlfX2dyaWQtY29udGFpbmVyJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQnRFZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbi1lZGl0Jyk7XHJcbmV4cG9ydCBjb25zdCBjYXJkQnRuQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbi1hZGQnKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwQWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwJyk7XHJcbmV4cG9ydCBjb25zdCBmb3JtVXNlciA9IGRvY3VtZW50LmZvcm1zLmZvcm1Vc2VyO1xyXG5leHBvcnQgY29uc3QgZm9ybUNhcmQgPSBkb2N1bWVudC5mb3Jtcy5mb3JtQ2FyZDtcclxuZXhwb3J0IGNvbnN0IHBvcHVwVXNlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN1c2VyJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2FyZCcpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fbmFtZScpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2Fib3V0Jyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhcicpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZVN1Ym1pdEJ0biA9IGZvcm1Vc2VyLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc2F2ZS1idXR0b24nKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRTdWJtaXRCdG4gPSBmb3JtQ2FyZC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnV0dG9uJyk7XHJcbmV4cG9ydCBjb25zdCBuYW1lSW5wdXQgPSBwb3B1cFByb2ZpbGVGb3JtLnF1ZXJ5U2VsZWN0b3IoJyNwb3B1cFVzZXJOYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBqb2JJbnB1dCA9IHBvcHVwUHJvZmlsZUZvcm0ucXVlcnlTZWxlY3RvcignI3BvcHVwVXNlckFib3V0Jyk7XHJcbmV4cG9ydCBjb25zdCBpbnB1dFBvcHVwTmFtZSA9IGZvcm1DYXJkLnF1ZXJ5U2VsZWN0b3IoJyNwbGFjZU5hbWUnKTtcclxuZXhwb3J0IGNvbnN0IGlucHV0VXJsID0gZm9ybUNhcmQucXVlcnlTZWxlY3RvcignI3BsYWNlVXJsJyk7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9hdmF0YXInKTtcclxuZXhwb3J0IGNvbnN0IGF2YXRhckZvcm0gPSBhdmF0YXJQb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0tYXZhdGFyJyk7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJQaG90b0lucHV0ID0gYXZhdGFyRm9ybS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0Jyk7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJTdWJtaXRCdG4gPSBhdmF0YXJGb3JtLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc2F2ZS1idXR0b24nKTtcclxuZXhwb3J0IGNvbnN0IGVuYWJsZVZhbGlkYXRpb25TZXR0aW5ncyA9IHtcclxuICAgIGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiAnLnBvcHVwX19pbnB1dCcsXHJcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fc2F2ZS1idXR0b24nLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogJ3BvcHVwX19zYXZlLWJ1dHRvbl90eXBlX2luYWN0aXZlJyxcclxuICAgIGlucHV0RXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dF90eXBlX2Vycm9yJyxcclxuICAgIGVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXQtZXJyb3JfdHlwZV9hY3RpdmUnXHJcbiAgfTsiLCJleHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gICAge1xyXG4gICAgICBuYW1lOiAn0JDRgNGF0YvQtycsXHJcbiAgICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvYXJraHl6LmpwZydcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6ICfQp9C10LvRj9Cx0LjQvdGB0LrQsNGPINC+0LHQu9Cw0YHRgtGMJyxcclxuICAgICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9jaGVseWFiaW5zay1vYmxhc3QuanBnJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogJ9CY0LLQsNC90L7QstC+JyxcclxuICAgICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9pdmFub3ZvLmpwZydcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6ICfQmtCw0LzRh9Cw0YLQutCwJyxcclxuICAgICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9rYW1jaGF0a2EuanBnJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogJ9Cl0L7Qu9C80L7Qs9C+0YDRgdC60LjQuSDRgNCw0LnQvtC9JyxcclxuICAgICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9raG9sbW9nb3Jza3ktcmF5b24uanBnJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogJ9CR0LDQudC60LDQuycsXHJcbiAgICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvYmFpa2FsLmpwZydcclxuICAgIH1cclxuICAgIF07XHJcbiIsIlxyXG4vLyEg0KTRg9C90LrRhtC40Y8g0L7RgtC60YDRi9Cy0LDRjtGJ0LDRjyDQv9C+0L/QsNC/XHJcbmV4cG9ydCBmdW5jdGlvbiBvcGVuUG9wdXAocG9wdXApIHtcclxuICAgIHBvcHVwLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX29wZW5lZCcpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGNsb3NlRXNjKTtcclxuICB9XHJcblxyXG4vLyEg0KTRg9C90LrRhtC40Y8g0LfQsNC60YDRi9Cy0LDRjtGJ0LDRjyDQv9C+0L/QsNC/XHJcbmV4cG9ydCBmdW5jdGlvbiBjbG9zZVBvcHVwKHBvcHVwKSB7XHJcbiAgICBwb3B1cC5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBjbG9zZUVzYyk7XHJcbiAgfVxyXG4gIFxyXG4gIGNvbnN0IGNsb3NlRXNjID0gKGV2dCkgPT4ge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgY2xvc2VQb3B1cChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfb3BlbmVkJykpO1xyXG4gICAgfVxyXG4gIH07IiwiY29uc3QgY29uZmlnID0ge1xyXG4gICAgYmFzZVVybDogJ2h0dHBzOi8vbm9tb3JlcGFydGllcy5jby92MS9wbHVzLWNvaG9ydC0xOScsXHJcbiAgICBoZWFkZXJzOiB7XHJcbiAgICAgIGF1dGhvcml6YXRpb246ICdmZGFiOTBjNC1iMDgwLTRkYzEtODI4OC1hNzE0MDBkOTg0ZDgnLFxyXG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICB9XHJcbiAgfTtcclxuICBcclxuICAvLyBSZXNwb25zZSBjaGVja1xyXG4gIFxyXG4gIGNvbnN0IGNoZWNrUmVzcG9uc2UgPSAocmVzKSA9PiB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKTtcclxuICB9O1xyXG4gIFxyXG4gIC8vIEdldCB1c2VyIGRhdGFcclxuICBcclxuICBleHBvcnQgY29uc3QgZ2V0U3J2VXNlciA9ICgpID0+IHtcclxuICAgIHJldHVybiBmZXRjaChgJHtjb25maWcuYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIERvd25sb2FkaW5nIGNhcmRzIGZyb20gdGhlIHNlcnZlclxyXG4gIFxyXG4gIGV4cG9ydCBjb25zdCBnZXRTcnZDYXJkcyA9ICgpID0+IHtcclxuICAgIHJldHVybiBmZXRjaChgJHtjb25maWcuYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIEVkaXQgYXZhdGFyXHJcbiAgXHJcbiAgZXhwb3J0IGNvbnN0IGNoYW5nZUF2YXRhciA9IChwaG90bykgPT4ge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBhdmF0YXI6IHBob3RvXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIEVkaXQgbmFtZSBhbmQgYWJvdXQgaW5mb1xyXG4gIFxyXG4gIGV4cG9ydCBjb25zdCBlZGl0UHJvZmlsZSA9IChuYW1lLCBhYm91dCkgPT4ge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICBoZWFkZXJzOiBjb25maWcuaGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IG5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IGFib3V0XHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIEFkZCBjYXJkXHJcbiAgXHJcbiAgZXhwb3J0IGNvbnN0IGNyZWF0ZU5ld0NhcmQgPSAobGluaywgbmFtZSkgPT4ge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBsaW5rOiBsaW5rXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIERlbGV0ZSBjYXJkXHJcbiAgXHJcbiAgZXhwb3J0IGNvbnN0IGRlbGV0ZUNhcmQgPSAoY2FyZCkgPT4ge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS9jYXJkcy8ke2NhcmR9YCwge1xyXG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICBoZWFkZXJzOiBjb25maWcuaGVhZGVyc1xyXG4gICAgfSlcclxuICAgIC50aGVuKGNoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuICBcclxuICAvLyBBZGQgbGlrZVxyXG4gIFxyXG4gIGV4cG9ydCBjb25zdCBhZGRMaWtlID0gKGNhcmQpID0+IHtcclxuICAgIHJldHVybiBmZXRjaChgJHtjb25maWcuYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkfWAsIHtcclxuICAgICAgbWV0aG9kOiAnUFVUJyxcclxuICAgICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnNcclxuICAgIH0pXHJcbiAgICAudGhlbihjaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcbiAgXHJcbiAgLy8gRGVsZXRlIGxpa2VcclxuICBcclxuICBleHBvcnQgY29uc3QgZGVsZXRlTGlrZSA9IChjYXJkKSA9PiB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmJhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG4iLCJpbXBvcnQgeyBvcGVuUG9wdXAgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xyXG5pbXBvcnQge3BvcHVwSW1hZ2UsIHBvcHVwVGV4dCwgcG9wdXBJbWcsIGdhbGxlcnlDYXJkfSBmcm9tIFwiLi9jb25zdGFudHMuanNcIjtcclxuaW1wb3J0IHtkZWxldGVDYXJkLCBhZGRMaWtlLCBkZWxldGVMaWtlfSBmcm9tIFwiLi9hcGkuanNcIjtcclxuXHJcbiAgZXhwb3J0IGNvbnN0IGNyZWF0ZUNhcmQgPSAoZGF0YSwgdXNlcikgPT4ge1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBnYWxsZXJ5Q2FyZC5xdWVyeVNlbGVjdG9yKCcuZ2FsbGVyeV9fY2FyZCcpLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIGNvbnN0IGNhcmRJbWFnZSA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYWxsZXJ5X19pbWFnZScpO1xyXG4gICAgY29uc3QgY2FyZFRpdGxlID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmdhbGxlcnlfX3RpdGxlJyk7XHJcbiAgICBjb25zdCBjYXJkVHJhc2hCdG4gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZ2FsbGVyeV9fZGVsZXQnKTtcclxuICAgIGNvbnN0IGNhcmRMaWtlQnRuID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmdhbGxlcnlfX2J1dHRvbi1oZWFydCcpO1xyXG4gICAgY29uc3QgY2FyZExpa2VOdW0gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZ2FsbGVyeV9fbGlrZS1udW0nKTtcclxuICBcclxuICAgIGNhcmRJbWFnZS5zcmMgPSBkYXRhLmxpbms7XHJcbiAgICBjYXJkSW1hZ2UuYWx0ID0gZGF0YS5uYW1lO1xyXG4gICAgY2FyZFRpdGxlLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICAgY2FyZExpa2VOdW0udGV4dENvbnRlbnQgPSBkYXRhLmxpa2VzLmxlbmd0aDtcclxuICBcclxuICAgIC8vIERlbGV0ZSB1c2VyIGNhcmQnc1xyXG4gIFxyXG4gICAgaWYgKHVzZXIuX2lkID09PSBkYXRhLm93bmVyLl9pZCkge1xyXG4gICAgICBjYXJkVHJhc2hCdG4uY2xhc3NMaXN0LmFkZCgnZ2FsbGVyeV9fX2RlbGV0ZV90eXBlX2FjdGl2ZScpO1xyXG4gICAgICBjYXJkVHJhc2hCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZGVsZXRlQ2FyZChkYXRhLl9pZClcclxuICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgZGVsZXRlQ2FyZChjYXJkVHJhc2hCdG4pO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxyXG4gICAgICAgICAgfSlcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAvLyBBY3RpdmUgbGlrZSdzIG9uIGNhcmRcclxuICBcclxuICAgIGZvciAoY29uc3QgaXRlbSBvZiBkYXRhLmxpa2VzKSB7XHJcbiAgICAgIGlmIChpdGVtLl9pZC5pbmNsdWRlcyh1c2VyLl9pZCkpIHtcclxuICAgICAgICBjYXJkTGlrZUJ0bi5jbGFzc0xpc3QuYWRkKCdnYWxsZXJ5X19idXR0b24taGVhcnRfYWN0aXZlJyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICBcclxuICAgIC8vIE5ldyBsaWtlJ3Mgb24gY2FyZFxyXG4gIFxyXG4gICAgY2FyZExpa2VCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgIGlmICghZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2dhbGxlcnlfX2J1dHRvbi1oZWFydF9hY3RpdmUnKSkge1xyXG4gICAgICAgIGFkZExpa2UoZGF0YS5faWQpXHJcbiAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2dhbGxlcnlfX2J1dHRvbi1oZWFydF9hY3RpdmUnKTtcclxuICAgICAgICAgICAgY2FyZExpa2VOdW0udGV4dENvbnRlbnQgPSBkYXRhLmxpa2VzLmxlbmd0aDtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRlbGV0ZUxpa2UoZGF0YS5faWQpXHJcbiAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ2dhbGxlcnlfX2J1dHRvbi1oZWFydF9hY3RpdmUnKTtcclxuICAgICAgICAgICAgY2FyZExpa2VOdW0udGV4dENvbnRlbnQgPSBkYXRhLmxpa2VzLmxlbmd0aDtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICBcclxuICAgIGNhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgb3BlblBvcHVwKHBvcHVwSW1hZ2UpO1xyXG4gICAgICBwb3B1cEltZy5zcmMgPSBkYXRhLmxpbms7XHJcbiAgICAgIHBvcHVwSW1nLmFsdCA9IGRhdGEubmFtZTtcclxuICAgICAgcG9wdXBUZXh0LnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICAgfSk7XHJcbiAgXHJcbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XHJcbiAgfTtcclxuXHJcbiAgLy8hINCU0L7QsdCw0LLQu9GP0LXQvCDQutCw0YDRgtGDINCyINC60L7QvdGC0LXQudC90LXRgFxyXG5leHBvcnQgZnVuY3Rpb24gYWRkQ2FyZChjYXJkLCBjb250YWluZXIpIHtcclxuICBjb250YWluZXIucHJlcGVuZChjYXJkKTtcclxuICB9IiwiXHJcbi8vIFNob3cgZXJyb3IgdGV4dCBcclxuXHJcbmNvbnN0IHNob3dJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSwgc2V0dGluZ3MpID0+IHtcclxuICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQoc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcclxuICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XHJcbiAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQoc2V0dGluZ3MuZXJyb3JDbGFzcyk7XHJcbn07XHJcblxyXG4vLyBIaWRlIGVycm9yIHRleHRcclxuXHJcbmNvbnN0IGhpZGVJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIHNldHRpbmdzKSA9PiB7XHJcbiAgY29uc3QgZXJyb3JFbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoc2V0dGluZ3MuZXJyb3JDbGFzcyk7XHJcbiAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XHJcbn07XHJcblxyXG4vLyBWYWxpZGl0eSBjaGVja1xyXG5cclxuY29uc3QgY2hlY2tJbnB1dFZhbGlkaXR5ID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIHNldHRpbmdzKSA9PiB7XHJcbiAgaWYgKGlucHV0RWxlbWVudC52YWxpZGl0eS5wYXR0ZXJuTWlzbWF0Y2gpIHtcclxuICAgIGlucHV0RWxlbWVudC5zZXRDdXN0b21WYWxpZGl0eShpbnB1dEVsZW1lbnQuZGF0YXNldC5lcnJvck1lc3NhZ2UpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBpbnB1dEVsZW1lbnQuc2V0Q3VzdG9tVmFsaWRpdHkoXCJcIik7XHJcbiAgfVxyXG4gIFxyXG4gIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICBcclxuICAgIHNob3dJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSwgc2V0dGluZ3MpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBcclxuICAgIGhpZGVJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIHNldHRpbmdzKTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgc2V0RXZlbnRMaXN0ZW5lcnMgPSAoZm9ybUVsZW1lbnQsIHNldHRpbmdzKSA9PiB7XHJcbiAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHNldHRpbmdzLmlucHV0U2VsZWN0b3IpKTtcclxuICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCBzZXR0aW5ncyk7XHJcbiAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xyXG4gICAgICBjaGVja0lucHV0VmFsaWRpdHkoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgc2V0dGluZ3MpXHJcbiAgICAgIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgc2V0dGluZ3MpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn07IFxyXG5cclxuLy8gRW5hYmxlIHZhbGlkYXRpb25cclxuXHJcbmV4cG9ydCBjb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKHNldHRpbmdzKSA9PiB7XHJcbiAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2V0dGluZ3MuZm9ybVNlbGVjdG9yKSk7XHJcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcclxuICAgIGZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuICBcclxuICAgICAgc2V0RXZlbnRMaXN0ZW5lcnMoZm9ybUVsZW1lbnQsIHNldHRpbmdzKTtcclxuICB9KTsgXHJcbn07XHJcblxyXG4vLyBDaGVjayBpbnZhbGlkIGlucHV0XHJcblxyXG5jb25zdCBoYXNJbnZhbGlkSW5wdXQgPSAoaW5wdXRMaXN0KSA9PiB7XHJcbiAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xyXG4gIH0pXHJcbn07XHJcblxyXG4vLyBDb250cm9sIHN1Ym1pdCBidXR0b25cclxuXHJcbmNvbnN0IHRvZ2dsZUJ1dHRvblN0YXRlID0gKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgc2V0dGluZ3MpID0+IHtcclxuICBpZiAoaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcclxuICAgICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcclxuICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChzZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICB9IGVsc2Uge1xyXG4gICAgICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShzZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBCdXR0b24gc3VibWl0IGRpc2FibGVcclxuXHJcbmV4cG9ydCBjb25zdCBidG5EaXNhYmxlID0gKGJ1dHRvbkVsZW1lbnQsIHNldHRpbmdzKSA9PiB7XHJcbiAgYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG59IiwiaW1wb3J0ICcuLi9wYWdlcy9pbmRleC5jc3MnO1xyXG5cclxuaW1wb3J0IHtwb3B1cEltYWdlLCBwb3B1cEltZywgcG9wdXBUZXh0LCBnYWxsZXJ5Q2FyZCwgYWxsRm9ybXMsIGdhbGxlcnlDb250YWluZXIsIHByb2ZpbGVCdEVkaXQsIGNhcmRCdG5BZGQsIHBvcHVwQWxsLCBmb3JtVXNlciwgZm9ybUNhcmQsIHBvcHVwVXNlciwgcG9wdXBDYXJkLCBwcm9maWxlTmFtZSwgcHJvZmlsZUFib3V0LCBwcm9maWxlQXZhdGFyLCBwcm9maWxlU3VibWl0QnRuLCBhdmF0YXJQb3B1cCwgYXZhdGFyRm9ybSwgYXZhdGFyUGhvdG9JbnB1dCwgYXZhdGFyU3VibWl0QnRuLCBjYXJkU3VibWl0QnRuLCBuYW1lSW5wdXQsIGpvYklucHV0LCBpbnB1dFBvcHVwTmFtZSwgaW5wdXRVcmx9IGZyb20gXCIuL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuaW1wb3J0IHsgaW5pdGlhbENhcmRzIH0gZnJvbSBcIi4vY2FyZC1jb250YWluZXIuanNcIjtcclxuaW1wb3J0IHsgY3JlYXRlQ2FyZCwgYWRkQ2FyZCB9IGZyb20gXCIuL2NhcmQuanNcIjtcclxuaW1wb3J0IHsgY2xvc2VQb3B1cCwgb3BlblBvcHVwIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcclxuaW1wb3J0IHsgZW5hYmxlVmFsaWRhdGlvbiB9IGZyb20gXCIuL3ZhbGlkYXRlLmpzXCI7XHJcbmltcG9ydCB7IGJ0bkRpc2FibGUgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xyXG5pbXBvcnQge2VuYWJsZVZhbGlkYXRpb25TZXR0aW5ncyBhcyBzZXR0aW5nc30gZnJvbSBcIi4vY29uc3RhbnRzLmpzXCI7XHJcbmltcG9ydCB7Z2V0U3J2VXNlciwgZ2V0U3J2Q2FyZHMsIGVkaXRQcm9maWxlLCBjaGFuZ2VBdmF0YXIsIGNyZWF0ZU5ld0NhcmR9IGZyb20gXCIuL2FwaS5qc1wiO1xyXG5cclxuICBsZXQgdXNlciA9IHt9O1xyXG5cclxuLy8gTG9hZCBkYXRhIGFuZCBjYXJkcyBmcm9tIHNlcnZlclxyXG5cclxuUHJvbWlzZS5hbGwoW2dldFNydlVzZXIoKSwgZ2V0U3J2Q2FyZHMoKV0pXHJcbiAgLnRoZW4oKFtzcnZVc2VyLCBjYXJkc10pID0+IHtcclxuICAgIHVzZXIgPSBzcnZVc2VyO1xyXG4gICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSB1c2VyLm5hbWU7XHJcbiAgICBwcm9maWxlQWJvdXQudGV4dENvbnRlbnQgPSB1c2VyLmFib3V0O1xyXG4gICAgcHJvZmlsZUF2YXRhci5zcmMgPSB1c2VyLmF2YXRhcjtcclxuXHJcbiAgICBjYXJkcy5yZXZlcnNlKCkuZm9yRWFjaCgoZGF0YSkgPT4ge1xyXG4gICAgICBnYWxsZXJ5Q29udGFpbmVyLnByZXBlbmQoY3JlYXRlQ2FyZChkYXRhLCB1c2VyKSk7XHJcbiAgICB9KVxyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxufSlcclxuXHJcbmZ1bmN0aW9uIGNoYW5nZVByb2ZpbGUgKGV2dCkge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIHByb2ZpbGVTdWJtaXRCdG4udGV4dENvbnRlbnQgPSAn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nO1xyXG4gIGVkaXRQcm9maWxlKG5hbWVJbnB1dC52YWx1ZSwgam9iSW5wdXQudmFsdWUpXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gbmFtZUlucHV0LnZhbHVlO1xyXG4gICAgICBwcm9maWxlQWJvdXQudGV4dENvbnRlbnQgPSBqb2JJbnB1dC52YWx1ZTtcclxuICAgICAgY2xvc2VQb3B1cChwb3B1cFVzZXIpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgcHJvZmlsZVN1Ym1pdEJ0bi50ZXh0Q29udGVudCA9ICfQodC+0YXRgNCw0L3QuNGC0YwnO1xyXG4gICAgfSk7XHJcbiAgXHJcbn1cclxuXHJcbi8vIEVkaXQgYXZhdGFyXHJcblxyXG5mdW5jdGlvbiBjaGFuZ2VBdmF0YXJQcm9maWxlKGV2dCkge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIGF2YXRhclN1Ym1pdEJ0bi50ZXh0Q29udGVudCA9ICfQodC+0YXRgNCw0L3QtdC90LjQtS4uLic7XHJcbiAgY29uc3QgYXZhdGFyID0gYXZhdGFyUGhvdG9JbnB1dC52YWx1ZTtcclxuICBjaGFuZ2VBdmF0YXIoYXZhdGFyKVxyXG4gICAgLnRoZW4oKGl0ZW0pID0+IHtcclxuICAgICAgcHJvZmlsZUF2YXRhci5zcmMgPSBpdGVtLmF2YXRhcjtcclxuICAgICAgYXZhdGFyRm9ybS5yZXNldCgpO1xyXG4gICAgICBldnQudGFyZ2V0LnJlc2V0KCk7XHJcbiAgICAgIGNsb3NlUG9wdXAoYXZhdGFyUG9wdXApO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgYXZhdGFyU3VibWl0QnRuLnRleHRDb250ZW50ID0gJ9Ch0L7RhdGA0LDQvdC40YLRjCc7XHJcbiAgICB9KVxyXG59XHJcblxyXG4vLyBBZGQgbmV3IGNhcmRcclxuXHJcbmZ1bmN0aW9uIGFkZE5ld0NhcmQgKGV2dCkge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIGNhcmRTdWJtaXRCdG4udGV4dENvbnRlbnQgPSAn0KHQvtC30LTQsNC90LjQtS4uLic7XHJcbiAgY3JlYXRlTmV3Q2FyZChpbnB1dFVybC52YWx1ZSwgaW5wdXRQb3B1cE5hbWUudmFsdWUpXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICBnYWxsZXJ5Q29udGFpbmVyLnByZXBlbmQoY3JlYXRlQ2FyZChkYXRhLCB1c2VyKSk7XHJcbiAgICAgIGV2dC50YXJnZXQucmVzZXQoKTtcclxuICAgICAgY2xvc2VQb3B1cChwb3B1cENhcmQpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgY2FyZFN1Ym1pdEJ0bi50ZXh0Q29udGVudCA9ICfQodC+0LfQtNCw0YLRjCc7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLy8hINCa0L3QvtC/0LrQsCDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC/0YDQvtGE0LjQu9GPXHJcbnByb2ZpbGVCdEVkaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgb3BlblBvcHVwKHBvcHVwVXNlcik7XHJcbiAgZm9ybVVzZXIucHJvZmlsZVRpdGxlLnZhbHVlID0gcHJvZmlsZU5hbWUudGV4dENvbnRlbnQ7XHJcbiAgZm9ybVVzZXIucHJvZmlsZVN1YnRpdGxlLnZhbHVlID0gcHJvZmlsZUFib3V0LnRleHRDb250ZW50O1xyXG59KTtcclxuXHJcbi8vISDQmtC90L7Qv9C60LAg0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxyXG5jYXJkQnRuQWRkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gIGNvbnN0IFN1Ym1CdXR0b24gPSBwb3B1cENhcmQucXVlcnlTZWxlY3RvcihzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgb3BlblBvcHVwKHBvcHVwQ2FyZCk7XHJcbiAgYnRuRGlzYWJsZShTdWJtQnV0dG9uLCBzZXR0aW5ncyk7XHJcbn0pO1xyXG5cclxuLy8gTGlzdGVuZXIgZm9yIG9wZW4gQXZhdGFyIHBvcHVwXHJcblxyXG5wcm9maWxlQXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgb3BlblBvcHVwKGF2YXRhclBvcHVwKTtcclxufSk7XHJcblxyXG4vLyEg0JfQsNC60YDRi9Cy0LDQtdC8INC/0L7Qv9Cw0L9cclxucG9wdXBBbGwuZm9yRWFjaChmdW5jdGlvbiAocG9wdXApIHtcclxuICBwb3B1cC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xyXG4gICAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2Nsb3NlLWljb24nKSB8fCBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwJykpIHtcclxuICAgICAgY2xvc2VQb3B1cChlLnRhcmdldC5jbG9zZXN0KCcucG9wdXAnKSk7XHJcbiAgICB9XHJcbiAgfSlcclxufSlcclxuXHJcbi8vIExpc3RlbmVyIGZvciBwcm9maWxlIHN1Ym1pdCBidXR0b24gKCAgKSAgXHJcblxyXG5mb3JtVXNlci5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBjaGFuZ2VQcm9maWxlKTtcclxuXHJcbi8vIExpc3RlbmVyIGZvciBjYXJkIHN1Ym1pdCBidXR0b24gKCBjYXJkLmpzIClcclxuXHJcbmZvcm1DYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGFkZE5ld0NhcmQpO1xyXG5cclxuLy8gUmVuZGVyIGNhcmRzIGZyb20gYXJyYXkgKCBkYXRhYmFzZS5qcyApXHJcblxyXG5hdmF0YXJGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGNoYW5nZUF2YXRhclByb2ZpbGUpO1xyXG5cclxuZW5hYmxlVmFsaWRhdGlvbihzZXR0aW5ncyk7Il0sIm5hbWVzIjpbInBvcHVwSW1hZ2UiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwb3B1cEltZyIsInBvcHVwVGV4dCIsImdhbGxlcnlDYXJkIiwiY29udGVudCIsImFsbEZvcm1zIiwiZm9ybXMiLCJnYWxsZXJ5Q29udGFpbmVyIiwicHJvZmlsZUJ0RWRpdCIsImNhcmRCdG5BZGQiLCJwb3B1cEFsbCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtVXNlciIsImZvcm1DYXJkIiwicG9wdXBVc2VyIiwicG9wdXBDYXJkIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlQWJvdXQiLCJwcm9maWxlQXZhdGFyIiwicHJvZmlsZVN1Ym1pdEJ0biIsImNhcmRTdWJtaXRCdG4iLCJuYW1lSW5wdXQiLCJwb3B1cFByb2ZpbGVGb3JtIiwiam9iSW5wdXQiLCJpbnB1dFBvcHVwTmFtZSIsImlucHV0VXJsIiwiYXZhdGFyUG9wdXAiLCJhdmF0YXJGb3JtIiwiYXZhdGFyUGhvdG9JbnB1dCIsImF2YXRhclN1Ym1pdEJ0biIsImVuYWJsZVZhbGlkYXRpb25TZXR0aW5ncyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiaW5pdGlhbENhcmRzIiwibmFtZSIsImxpbmsiLCJvcGVuUG9wdXAiLCJwb3B1cCIsImNsYXNzTGlzdCIsImFkZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbG9zZUVzYyIsImNsb3NlUG9wdXAiLCJyZW1vdmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZ0Iiwia2V5IiwiY29uZmlnIiwiYmFzZVVybCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwiY2hlY2tSZXNwb25zZSIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJnZXRTcnZVc2VyIiwiZmV0Y2giLCJ0aGVuIiwiZ2V0U3J2Q2FyZHMiLCJjaGFuZ2VBdmF0YXIiLCJwaG90byIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYXZhdGFyIiwiZWRpdFByb2ZpbGUiLCJhYm91dCIsImNyZWF0ZU5ld0NhcmQiLCJkZWxldGVDYXJkIiwiY2FyZCIsImFkZExpa2UiLCJkZWxldGVMaWtlIiwiY3JlYXRlQ2FyZCIsImRhdGEiLCJ1c2VyIiwiY2FyZEVsZW1lbnQiLCJjbG9uZU5vZGUiLCJjYXJkSW1hZ2UiLCJjYXJkVGl0bGUiLCJjYXJkVHJhc2hCdG4iLCJjYXJkTGlrZUJ0biIsImNhcmRMaWtlTnVtIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJsaWtlcyIsImxlbmd0aCIsIl9pZCIsIm93bmVyIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJpdGVtIiwiaW5jbHVkZXMiLCJ0YXJnZXQiLCJjb250YWlucyIsImFkZENhcmQiLCJjb250YWluZXIiLCJwcmVwZW5kIiwic2hvd0lucHV0RXJyb3IiLCJmb3JtRWxlbWVudCIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsInNldHRpbmdzIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJoaWRlSW5wdXRFcnJvciIsImNoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwicGF0dGVybk1pc21hdGNoIiwic2V0Q3VzdG9tVmFsaWRpdHkiLCJkYXRhc2V0IiwidmFsaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInNldEV2ZW50TGlzdGVuZXJzIiwiaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwiYnV0dG9uRWxlbWVudCIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiZm9yRWFjaCIsImVuYWJsZVZhbGlkYXRpb24iLCJmb3JtTGlzdCIsInByZXZlbnREZWZhdWx0IiwiaGFzSW52YWxpZElucHV0Iiwic29tZSIsImRpc2FibGVkIiwiYnRuRGlzYWJsZSIsImFsbCIsInNydlVzZXIiLCJjYXJkcyIsInJldmVyc2UiLCJjaGFuZ2VQcm9maWxlIiwidmFsdWUiLCJmaW5hbGx5IiwiY2hhbmdlQXZhdGFyUHJvZmlsZSIsInJlc2V0IiwiYWRkTmV3Q2FyZCIsInByb2ZpbGVUaXRsZSIsInByb2ZpbGVTdWJ0aXRsZSIsIlN1Ym1CdXR0b24iLCJlIiwiY2xvc2VzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///794\n")}},__webpack_exports__={};__webpack_modules__[794]()})();